{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 8684d7c15c72435fb111","webpack:///./src/lib/bisnode/@main.js","webpack:///./src/lib/bisnode/actions.js","webpack:///./src/lib/bisnode/configs.js"],"names":["Bisnode","actions","bisnode","Object","setPrototypeOf","module","exports","callForData","VeLib","core","remote","Actions","regNumber","method","url","get","bisnodeUrl","companySuffix","ssn","personSuffix","norwayCompanySuffix","coreConfigs","configs","Configs"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA;;;;;;;;KAEMA,O,GACL,mBAAa;AAAA;;AAAE,OAAKC,OAAL;AAAwB,E;;AAGxC,KAAIC,UAAU,IAAIF,OAAJ,EAAd;;AAEAG,QAAOC,cAAP,CAAsBF,OAAtB;;AAEAG,QAAOC,OAAP,GAAiBJ,OAAjB,C;;;;;;;;;;ACRA;;;;AAFA,KAAIK,cAAcC,MAAMC,IAAN,CAAWC,MAAX,CAAkBH,WAApC;;KAMMI,O;AACL,qBAAc;AAAA;AAAE;;;;kCAEAC,S,EAAY;AAC3B,WAAOL,YAAa;AACnBM,aAAQ,KADW;AAEnBC,eAAS,iBAAQC,GAAR,GAAcC,UAAvB,GAAsC,iBAAQD,GAAR,GAAcE,aAApD,mBAAiFL;AAF9D,KAAb,CAAP;AAIA;;;iCAEcM,G,EAAM;AACpB,WAAOX,YAAa;AACnBM,aAAQ,KADW;AAEnBC,eAAS,iBAAQC,GAAR,GAAcC,UAAvB,GAAsC,iBAAQD,GAAR,GAAcI,YAApD,sBAAmFD;AAFhE,KAAb,CAAP;AAIA;;;oCAEiBN,S,EAAY;AAC7B,WAAOL,YAAa;AACnBM,aAAQ,KADW;AAEnBC,eAAS,iBAAQC,GAAR,GAAcC,UAAvB,GAAsC,iBAAQD,GAAR,GAAcK,mBAApD,mBAAuFR;AAFpE,KAAb,CAAP;AAIA;;;;;;AAGFP,QAAOC,OAAP,GAAiB,IAAIK,OAAJ,EAAjB,C;;;;;;;;;;;;;;;;AC/BA,KAAIU,cAAcb,MAAMC,IAAN,CAAWa,OAA7B;;KAEaC,O,WAAAA,O;;;;;;;yBACP;AACJ,WAAO;AACNN,oBAAe,UADT;AAENE,mBAAc,SAFR;AAGNC,0BAAqB,iBAHf;AAINJ,iBAAa;AAJP,KAAP;AAMA;;;;;;AAGK,KAAIM,4BAAU,IAAIC,OAAJ,EAAd,C","file":"ve.bisnode.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bisnode\"] = factory();\n\telse\n\t\troot[\"VeLib\"] = root[\"VeLib\"] || {}, root[\"VeLib\"][\"bisnode\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8684d7c15c72435fb111","import actions from \"./actions\"\r\n\r\nclass Bisnode {\r\n\tconstructor(){ this.actions = actions }\r\n}\r\n\r\nvar bisnode = new Bisnode()\r\n\r\nObject.setPrototypeOf(bisnode, actions)\r\n\r\nmodule.exports = bisnode\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/bisnode/@main.js","var callForData = VeLib.core.remote.callForData\r\n\r\nimport {\r\n\tconfigs\r\n} from \"./configs\"\r\n\r\nclass Actions {\r\n\tconstructor() {}\r\n\r\n\tgetCompanyInfo( regNumber ) {\r\n\t\treturn callForData( {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\turl: `${ configs.get().bisnodeUrl }${ configs.get().companySuffix }?regNumber=${ regNumber }`\r\n\t\t} )\r\n\t}\r\n\r\n\tgetPersonInfo( ssn ) {\r\n\t\treturn callForData( {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\turl: `${ configs.get().bisnodeUrl }${ configs.get().personSuffix }?personNumber=${ ssn }`\r\n\t\t} )\r\n\t}\r\n\r\n\tgetNorwayCompany( regNumber ) {\r\n\t\treturn callForData( {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\turl: `${ configs.get().bisnodeUrl }${ configs.get().norwayCompanySuffix }?regNumber=${ regNumber }`\r\n\t\t} )\r\n\t}\r\n}\r\n\r\nmodule.exports = new Actions()\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/bisnode/actions.js","var coreConfigs = VeLib.core.configs\r\n\r\nexport class Configs {\r\n\tget(){\r\n\t\treturn {\r\n\t\t\tcompanySuffix: '/company',\r\n\t\t\tpersonSuffix: '/person',\r\n\t\t\tnorwayCompanySuffix: '/norway-company',\r\n\t\t\tbisnodeUrl : '/bisnode'\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport let configs = new Configs()\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/bisnode/configs.js"],"sourceRoot":""}